<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.snakerflow.mybatis.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.github.snakerflow.mybatis.entity.OrderEntity">
    <!--@mbg.generated-->
    <!--@Table wf_order-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="parent_Id" jdbcType="VARCHAR" property="parentId" />
    <result column="process_Id" jdbcType="VARCHAR" property="processId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="create_Time" jdbcType="VARCHAR" property="createTime" />
    <result column="expire_Time" jdbcType="VARCHAR" property="expireTime" />
    <result column="last_Update_Time" jdbcType="VARCHAR" property="lastUpdateTime" />
    <result column="last_Updator" jdbcType="VARCHAR" property="lastUpdator" />
    <result column="priority" jdbcType="BOOLEAN" property="priority" />
    <result column="parent_Node_Name" jdbcType="VARCHAR" property="parentNodeName" />
    <result column="order_No" jdbcType="VARCHAR" property="orderNo" />
    <result column="variable" jdbcType="VARCHAR" property="variable" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, parent_Id, process_Id, creator, create_Time, expire_Time, last_Update_Time, last_Updator,
    priority, parent_Node_Name, order_No, `variable`, version
  </sql>

  <select id="findActiveOrders" resultType="org.snaker.engine.entity.Order">
    SELECT
            o.id,o.process_Id,o.creator,o.create_Time,
            o.parent_Id,o.parent_Node_Name,o.expire_Time,
            o.last_Update_Time,o.last_Updator,o.priority,
            o.order_No,o.variable, o.version
    FROM
            wf_order o
    LEFT JOIN
            wf_process p ON p.id = o.process_id
    <where>
      <if test="filter != null ">
        <if test="filter.names != null and filter.names.length != 0">
          and p.name IN
          <foreach collection="filter.names" index="index" item="name" separator="," open="(" close=")">
               #{name}
          </foreach>
        </if>
        <if test="filter.operators != null and filter.operators.length != 0">
          and o.creator in
          <foreach collection="filter.operators" index="index" item="creator" separator="," open="(" close=")">
            #{creator}
          </foreach>
        </if>
        <if test="filter.processId != null and filter.processId != ''">
          and o.process_Id = #{filter.processId}
        </if>
        <if test="filter.displayName != null and filter.displayName != ''">
          <bind name="displayName" value="'%'+ filter.displayName +'%'"/>
           and p.display_Name like #{displayName}
        </if>
        <if test="filter.processType != null and filter.processType != ''">
          and p.type = #{filter.processType}
        </if>
        <if test="filter.parentId != null and filter.parentId != ''">
          and o.parent_Id = #{filter.processId}
        </if>
        <if test="filter.excludedIds != null and filter.excludedIds.length != 0">
          and o.id not in
          <foreach collection="filter.excludedIds" index="index" open="(" close=")" separator="," item="oid">
            #{oid}
          </foreach>
        </if>
        <if test="filter.createTimeStart != null and filter.createTimeStart != ''" >
          and o.create_Time &gt;= #{filter.createTimeStart}
        </if>
        <if test="filter.createTimeEnd != null and filter.createTimeEnd != ''">
          and o.create_Time &lt;= #{filter.createTimeEnd}
        </if>
        <if test="filter.orderNo != null and filter.orderNo != ''">
          and o.order_No = #{filter.orderNo}
        </if>
        <if test="(filter.orderBy != null and filter.orderNo != '') and (filter.order) != null and filter.order != ''">
            order by o.create_Time desc
        </if>
      </if>
    </where>
  </select>
</mapper>
